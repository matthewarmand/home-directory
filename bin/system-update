#!/bin/sh -e

message() {
  printf "\033[1m\e[35m::\e[0m \033[1m%s\033[0m\n" "$1"
}

message "Checking for available security fixes..."
arch-audit -uc

message "Checking for relevant news..."
paru -Syu --newsonupgrade --review --removemake

message "Updating vim plugins from git..."
vim +PlugUpdate +qall

message "Removing orphaned packages..."
paru -c

message "Merging configuration file updates..."
pacdiff -b -s

message "Cleaning package caches..."
paccache_args="-r -c $(pacman-conf CacheDir)"
for d in "${XDG_CACHE_HOME:-$HOME/.cache}"/paru/clone/*/; do
  paccache_args="$paccache_args -c $d"
done
eval "paccache -k 3 $paccache_args"
message "Purging uninstalled package caches..."
eval "paccache -k 0 -u $paccache_args"

running_kernel=$(uname -r | sed -E 's/(\.0)?-arch/.arch/')
installed_kernel=$(paru -Q linux | awk '{print $2}')
if [ "$running_kernel" != "$installed_kernel" ]; then
  message "$(printf "Kernel has been upgraded from \e[32m%s\e[0m\033[1m to \e[32m%s\e[0m\033[1m; reboot now? [Y/n] " "$running_kernel" "$installed_kernel")"
  while true; do
    read -r yn
    if [ -z "$yn" ]; then
      yn='y'
    fi
    case $yn in
      [Yy]*) reboot ;;
      [Nn]*) break ;;
      *) printf "\e[31mPlease answer y or n.\e[0m\n" ;;
    esac
  done
fi
