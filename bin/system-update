#!/bin/sh -e

# required-arch-package :: fwupd
# required-arch-package :: udisks2

message() {
  printf "\033[1m\e[35m::\e[0m \033[1m%s\033[0m\n" "$1"
}

read_with_default() {
  read -r answer
  if [ -z "$answer" ]; then
    answer="$1"
  fi
  echo "$answer"
}

message "Checking for relevant news..."
if paru -Pw; then
  message "Enter Y to continue (default), or anything else to exit."
  case $(read_with_default 'y') in
    [Yy]*) true ;;
    *) exit 0 ;;
  esac
fi
# Upgrade keyring first. -Sy only safe if immediately followed by -Su
paru -Sy --needed --noconfirm archlinux-keyring
paru -Su --review --removemake

message "Updating Oh My Zsh..."
if (zsh -c "omz update --unattended") | grep -q "has been updated"; then
  zsh -c "omz changelog"
fi

message "Removing orphaned packages..."
paru -c

message "Merging configuration file updates..."
pacdiff -b -s

message "Cleaning package caches..."
package_dirs="-c $(pacman-conf CacheDir)"
for d in "${XDG_CACHE_HOME:-$HOME/.cache}"/paru/clone/*/; do
  package_dirs="$package_dirs -c $d"
done
eval "paccache -r -k 3 $package_dirs"

# This may require reboots, and has its own interaction for it. If no reboot required here, proceed to kernel check
message "Updating firmware..."
fwupdmgr refresh || true
if fwupdmgr get-updates --json | jq --exit-status "select(.Devices|length>0)" >/dev/null; then
  fwupdmgr update
fi

running_kernel=$(uname -r | sed -E 's/(\.0)?-/./')
installed_kernel=$(paru -Q linux | awk '{print $2}')
if [ "$running_kernel" != "$installed_kernel" ]; then
  message "$(printf "Kernel has been updated from \e[32m%s\e[0m\033[1m to \e[32m%s\e[0m\033[1m. Enter R to reboot (default), S to shutdown, or anything else to exit.\n" "$running_kernel" "$installed_kernel")"
  case $(read_with_default 'r') in
    [Rr]*) reboot ;;
    [Ss]*) shutdown -h +0 ;;
  esac
fi
